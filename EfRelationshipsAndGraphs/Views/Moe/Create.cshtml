@model EfRelationshipsAndGraphs.ViewModels.MoeViewModel

@{
    ViewBag.Title = "Create MOE";
}


<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.CharterId)

            @Html.LabelFor(m => m.CharterName, new { @class = "control-label" })
            @Html.EditorFor(m => m.CharterName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

            @Html.LabelFor(m => m.MoeName, new { @class = "control-label" })
            @Html.EditorFor(m => m.MoeName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.MoeName, "", new { @class = "text-danger" })

            @Html.LabelFor(m => m.Expenditure.Name, new { @class = "control-label" })
            @Html.EditorFor(m => m.Expenditure.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Expenditure.Name, "", new { @class = "text-danger" })

            @Html.LabelFor(m => m.DirectSupport.Name, new { @class = "control-label" })
            @Html.EditorFor(m => m.DirectSupport.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.DirectSupport.Name, "", new { @class = "text-danger" })

            @Html.LabelFor(m => m.Exemption.Name, new { @class = "control-label" })
            @Html.EditorFor(m => m.Exemption.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Exemption.Name, "", new { @class = "text-danger" })

            <hr />
            <input type="submit" id="Save" value="Save" class="btn btn-primary" />
        }
    </div>
</div>